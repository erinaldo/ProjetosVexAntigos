using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Sistecno.DAL
{
    public class Pedido
    {

        public decimal RetornarSaldoDaDivisao(string idProdutoCliente, string idClienteDivisao, string cnx)
        {
            System.Text.StringBuilder txt = new StringBuilder();

            txt.Append(" SELECT DISTINCT  ");
            txt.Append(" CAST(COALESCE(EST.SALDO, 0) - (SELECT COALESCE(SUM(DOCIT.QUANTIDADEUNIDADEESTOQUE),0) AS QUANTIDADEUNIDADEESTOQUE FROM DOCUMENTOITEM DOCIT     ");
            txt.Append(" INNER JOIN DOCUMENTO DOC ON (DOC.IDDOCUMENTO = DOCIT.IDDOCUMENTO)     ");
            txt.Append(" INNER JOIN PRODUTOEMBALAGEM PRODE 	ON (PRODE.IDPRODUTOEMBALAGEM = DOCIT.IDPRODUTOEMBALAGEM)     ");
            txt.Append(" WHERE DOC.ENTRADASAIDA = 'SAIDA'");
            txt.Append(" AND DOC.TIPODEDOCUMENTO = 'PEDIDO'");
            txt.Append(" AND DOC.ATIVO = 'SIM' ");
            txt.Append(" AND PRODE.IDPRODUTOCLIENTE = PROCLI.IDPRODUTOCLIENTE ");
            txt.Append(" AND COALESCE(DOCIT.ESTOQUEPROCESSADO,'NAO') = 'NAO'  ");
            txt.Append(" AND DOCIT.IDCLIENTEDIVISAO = ESTDIV.IDCLIENTEDIVISAO   ) AS NUMERIC (10,0)) AS SALDODIVISAODISPONIVEL ");
            txt.Append(" FROM ESTOQUEDIVISAO ESTDIV ");
            txt.Append(" LEFT JOIN ESTOQUE EST   ON(EST.IDESTOQUE = ESTDIV.IDESTOQUE) ");
            txt.Append(" LEFT JOIN PRODUTOCLIENTE PROCLI   ON(PROCLI.IDPRODUTOCLIENTE = EST.IDPRODUTOCLIENTE) ");
            txt.Append(" LEFT JOIN PRODUTOEMBALAGEM PROEMB   ON (PROEMB.IDPRODUTOCLIENTE = PROCLI.IDPRODUTOCLIENTE)  ");
            txt.Append(" LEFT JOIN UNIDADEDEMEDIDA UNIDEMED   ON (UNIDEMED.IDUNIDADEDEMEDIDA = PROCLI.IDUNIDADEDEMEDIDA)  ");
            txt.Append(" WHERE  ");
            txt.Append(" PROCLI.IDPRODUTOCLIENTE= " + idProdutoCliente);
            txt.Append(" AND ESTDIV.IDCLIENTEDIVISAO=" + idClienteDivisao);

            DataTable d = DAL.BD.cDb.RetornarDataTable(txt.ToString(), cnx);

            return decimal.Parse(d.Rows[0][0].ToString());

        }

        public DataTable RetornarProdutosPrimeiraVez(int idUsuario, int IdCliente, string cnx)
        {
            string ssql = "";
         
                ssql = " SELECT top 50 e.IDEstoque, PC.IDGRUPODEPRODUTO, PC.IDPRODUTOCLIENTE, CD.IDCLIENTEDIVISAO, CD.IDPARENTE, GP.DESCRICAO GRUPO, PC.CODIGO,CodigoDoCliente, left(PC.DESCRICAO, 30) PRODUTO, ";
                ssql += " CD.NOME DIVISAO, ED.SALDO-(SELECT  COALESCE(SUM(isnull(DOCIT.QUANTIDADEUNIDADEESTOQUE,0)),0) FROM DOCUMENTOITEM DOCIT    INNER JOIN DOCUMENTO DOC ON (DOC.IDDOCUMENTO = DOCIT.IDDOCUMENTO)    INNER JOIN PRODUTOEMBALAGEM PRODE 	ON (PRODE.IDPRODUTOEMBALAGEM = DOCIT.IDPRODUTOEMBALAGEM)    WHERE DOC.ENTRADASAIDA = 'SAIDA'    AND DOC.TIPODEDOCUMENTO = 'PEDIDO'   AND DOC.ATIVO = 'SIM'    		AND PRODE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE    AND COALESCE(DOCIT.ESTOQUEPROCESSADO,'NAO') = 'NAO'     AND DOCIT.IDCLIENTEDIVISAO = CD.IDCLIENTEDIVISAO) SALDO, ED.IDESTOQUEDIVISAO, ";
                ssql += " (SELECT TOP 1 VALORUNITARIO FROM PRODUTOEMBALAGEM WHERE IDPRODUTOCLIENTE=PC.IDPRODUTOCLIENTE ORDER BY DATADECADASTRO DESC)  VLUNITARIO,  ";
                ssql += " (SELECT TOP 1 IDPRODUTOEMBALAGEM FROM PRODUTOEMBALAGEM WHERE IDPRODUTOCLIENTE=PC.IDPRODUTOCLIENTE ORDER BY DATADECADASTRO DESC)  IDPRODUTOEMBALAGEM,";
                ssql += " (SELECT TOP 1  ISNULL(P.ALTURA,0.00) * ISNULL(P.LARGURA,0.00) * ISNULL(P.COMPRIMENTO, 0.00)  FROM PRODUTOEMBALAGEM PE INNER JOIN PRODUTO P ON P.IDPRODUTO = PE.IDPRODUTO WHERE PE.IDPRODUTOCLIENTE = 3389694 ORDER BY PE.IDPRODUTO DESC) M3,";
                ssql += " (SELECT TOP 1 PESOBRUTO  FROM PRODUTOEMBALAGEM PE INNER JOIN PRODUTO P ON P.IDPRODUTO = PE.IDPRODUTO WHERE PE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE ORDER BY PE.IDPRODUTO DESC) PESO";
                ssql += " FROM PRODUTOCLIENTE PC ";
                ssql += " LEFT JOIN GRUPODEPRODUTO GP ON GP.IDGRUPODEPRODUTO = PC.IDGRUPODEPRODUTO ";
                ssql += " INNER JOIN ESTOQUE  E ON E.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE	 ";
                ssql += " LEFT JOIN ESTOQUEDIVISAO ED ON ED.IDESTOQUE = E.IDESTOQUE ";
                ssql += " LEFT JOIN CLIENTEDIVISAO CD ON CD.IDCLIENTEDIVISAO = ED.IDCLIENTEDIVISAO ";
                ssql += " LEFT JOIN USUARIOCLIENTEDIVISAO UCD ON UCD.IDCLIENTEDIVISAO = CD.IDCLIENTEDIVISAO  ";
                ssql += " LEFT JOIN USUARIOCLIENTE UC ON UC.IDUSUARIOCLIENTE = UCD.IDUSUARIOCLIENTE ";

                ssql += " WHERE	PC.IDCLIENTE= " + IdCliente;
                ssql += " AND (ED.SALDO - ((SELECT  COALESCE(SUM(isnull(DOCIT.QUANTIDADEUNIDADEESTOQUE,0)),0) FROM DOCUMENTOITEM DOCIT    INNER JOIN DOCUMENTO DOC ON (DOC.IDDOCUMENTO = DOCIT.IDDOCUMENTO)    INNER JOIN PRODUTOEMBALAGEM PRODE 	ON (PRODE.IDPRODUTOEMBALAGEM = DOCIT.IDPRODUTOEMBALAGEM)    WHERE DOC.ENTRADASAIDA = 'SAIDA'    AND DOC.TIPODEDOCUMENTO = 'PEDIDO'   AND DOC.ATIVO = 'SIM'    		AND PRODE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE    AND COALESCE(DOCIT.ESTOQUEPROCESSADO,'NAO') = 'NAO'     AND DOCIT.IDCLIENTEDIVISAO = CD.IDCLIENTEDIVISAO))) >0 ";


                ssql += " AND ed.idclientedivisao in (select distinct cd.IDClienteDivisao from ClienteDivisao cd  inner join UsuarioCliente uc on uc.IDCliente = cd.IDCliente  inner join UsuarioClienteDivisao ucd on ucd.IDClienteDivisao = cd.IDClienteDivisao  inner join EstoqueDivisao ed on ed.IDClienteDivisao = cd.IDClienteDivisao  where cd.IDCliente ="+IdCliente+"  and uc.IDUsuario = "+idUsuario+" and ed.Saldo>0)";
               
           
            return DAL.BD.cDb.RetornarDataTable(ssql, cnx);
        }

        public DataTable RetornarProdutos(int idUsuario, int IdCliente, bool ConsiderarDivisao, string IdClienteDivisao, string cnx)
        {
            string ssql = "";
            if (ConsiderarDivisao || IdClienteDivisao != "")
            {
                ssql = " SELECT e.IDEstoque, PC.IDGRUPODEPRODUTO, PC.IDPRODUTOCLIENTE, CD.IDCLIENTEDIVISAO, CD.IDPARENTE, GP.DESCRICAO GRUPO, PC.CODIGO,CodigoDoCliente, left(PC.DESCRICAO, 30) PRODUTO, ";
                ssql += " CD.NOME DIVISAO, ED.SALDO-(SELECT  COALESCE(SUM(isnull(DOCIT.QUANTIDADEUNIDADEESTOQUE,0)),0) FROM DOCUMENTOITEM DOCIT    INNER JOIN DOCUMENTO DOC ON (DOC.IDDOCUMENTO = DOCIT.IDDOCUMENTO)    INNER JOIN PRODUTOEMBALAGEM PRODE 	ON (PRODE.IDPRODUTOEMBALAGEM = DOCIT.IDPRODUTOEMBALAGEM)    WHERE DOC.ENTRADASAIDA = 'SAIDA'    AND DOC.TIPODEDOCUMENTO = 'PEDIDO'   AND DOC.ATIVO = 'SIM'    		AND PRODE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE    AND COALESCE(DOCIT.ESTOQUEPROCESSADO,'NAO') = 'NAO'     AND DOCIT.IDCLIENTEDIVISAO = CD.IDCLIENTEDIVISAO) SALDO, ED.IDESTOQUEDIVISAO, ";
                ssql += " (SELECT TOP 1 VALORUNITARIO FROM PRODUTOEMBALAGEM WHERE IDPRODUTOCLIENTE=PC.IDPRODUTOCLIENTE ORDER BY DATADECADASTRO DESC)  VLUNITARIO,  ";
                ssql += " (SELECT TOP 1 IDPRODUTOEMBALAGEM FROM PRODUTOEMBALAGEM WHERE IDPRODUTOCLIENTE=PC.IDPRODUTOCLIENTE ORDER BY DATADECADASTRO DESC)  IDPRODUTOEMBALAGEM,";
                ssql += " ISNULL((SELECT TOP 1  ISNULL(P.ALTURA,0.00) * ISNULL(P.LARGURA,0.00) * ISNULL(P.COMPRIMENTO, 0.00)  FROM PRODUTOEMBALAGEM PE INNER JOIN PRODUTO P ON P.IDPRODUTO = PE.IDPRODUTO WHERE PE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE ORDER BY PE.IDPRODUTO DESC), 0) M3,";
                ssql += " ISNULL((SELECT TOP 1 PESOBRUTO  FROM PRODUTOEMBALAGEM PE INNER JOIN PRODUTO P ON P.IDPRODUTO = PE.IDPRODUTO WHERE PE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE ORDER BY PE.IDPRODUTO DESC), 0) PESO";
                ssql += " FROM PRODUTOCLIENTE PC ";
                ssql += " LEFT JOIN GRUPODEPRODUTO GP ON GP.IDGRUPODEPRODUTO = PC.IDGRUPODEPRODUTO ";
                ssql += " INNER JOIN ESTOQUE  E ON E.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE	 ";
                ssql += " LEFT JOIN ESTOQUEDIVISAO ED ON ED.IDESTOQUE = E.IDESTOQUE ";
                ssql += " LEFT JOIN CLIENTEDIVISAO CD ON CD.IDCLIENTEDIVISAO = ED.IDCLIENTEDIVISAO ";
                ssql += " LEFT JOIN USUARIOCLIENTEDIVISAO UCD ON UCD.IDCLIENTEDIVISAO = CD.IDCLIENTEDIVISAO  ";
                ssql += " LEFT JOIN USUARIOCLIENTE UC ON UC.IDUSUARIOCLIENTE = UCD.IDUSUARIOCLIENTE ";
               
                ssql += " WHERE	PC.IDCLIENTE= " + IdCliente;
                ssql += " AND (ED.SALDO - ((SELECT  COALESCE(SUM(isnull(DOCIT.QUANTIDADEUNIDADEESTOQUE,0)),0) FROM DOCUMENTOITEM DOCIT    INNER JOIN DOCUMENTO DOC ON (DOC.IDDOCUMENTO = DOCIT.IDDOCUMENTO)    INNER JOIN PRODUTOEMBALAGEM PRODE 	ON (PRODE.IDPRODUTOEMBALAGEM = DOCIT.IDPRODUTOEMBALAGEM)    WHERE DOC.ENTRADASAIDA = 'SAIDA'    AND DOC.TIPODEDOCUMENTO = 'PEDIDO'   AND DOC.ATIVO = 'SIM'    		AND PRODE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE    AND COALESCE(DOCIT.ESTOQUEPROCESSADO,'NAO') = 'NAO'     AND DOCIT.IDCLIENTEDIVISAO = CD.IDCLIENTEDIVISAO))) >=0 ";

                if (IdClienteDivisao.Length > 0)
                {
                    ssql += " AND ed.idclientedivisao= " + IdClienteDivisao;
                }
                else
                    ssql += " AND UC.IDUSUARIO= " + idUsuario;


                ssql += " AND PC.ATIVO='SIM' ";
                ssql += " ORDER BY PC.DESCRICAO ";
            }
            else
            {
                ssql = " SELECT  ";
                ssql += " E.IDESTOQUE, ";
                ssql += " E.SALDO - DBO.SALDO_EMPENHADO_ESTOQUE(PC.IDGRUPODEPRODUTO) SALDODISPONIVEL ,  ";
                ssql += " PC.IDGRUPODEPRODUTO, PC.IDPRODUTOCLIENTE, '0' IDCLIENTEDIVISAO, '0' IDPARENTE, GP.DESCRICAO GRUPO, PC.CODIGO,CODIGODOCLIENTE, LEFT(PC.DESCRICAO, 30) PRODUTO,  '' DIVISAO, E.SALDO,  0 IDESTOQUEDIVISAO,   ";
                ssql += " (SELECT TOP 1 VALORUNITARIO FROM PRODUTOEMBALAGEM WHERE IDPRODUTOCLIENTE=PC.IDPRODUTOCLIENTE ORDER BY DATADECADASTRO DESC)  VLUNITARIO, ";
                ssql += " (SELECT TOP 1 VALORUNITARIO FROM PRODUTOEMBALAGEM WHERE IDPRODUTOCLIENTE=PC.IDPRODUTOCLIENTE ORDER BY DATADECADASTRO DESC)  VLUNITARIO,  ";
                ssql += " (SELECT TOP 1 IDPRODUTOEMBALAGEM FROM PRODUTOEMBALAGEM WHERE IDPRODUTOCLIENTE=PC.IDPRODUTOCLIENTE ORDER BY DATADECADASTRO DESC)  IDPRODUTOEMBALAGEM,";
                ssql += " (SELECT TOP 1  ISNULL(P.ALTURA,0.00) * ISNULL(P.LARGURA,0.00) * ISNULL(P.COMPRIMENTO, 0.00)  FROM PRODUTOEMBALAGEM PE INNER JOIN PRODUTO P ON P.IDPRODUTO = PE.IDPRODUTO WHERE PE.IDPRODUTOCLIENTE = 3389694 ORDER BY PE.IDPRODUTO DESC) M3,";
                ssql += " (SELECT TOP 1 PESOBRUTO  FROM PRODUTOEMBALAGEM PE INNER JOIN PRODUTO P ON P.IDPRODUTO = PE.IDPRODUTO WHERE PE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE ORDER BY PE.IDPRODUTO DESC) PESO";
                ssql += " FROM PRODUTOCLIENTE PC   ";
                ssql += " LEFT JOIN GRUPODEPRODUTO GP ON GP.IDGRUPODEPRODUTO = PC.IDGRUPODEPRODUTO   ";
                ssql += " INNER JOIN ESTOQUE  E ON E.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE	   ";
                ssql += " WHERE	PC.IDCLIENTE=    " + IdCliente;
                ssql += " AND PC.ATIVO='SIM'   ";
                ssql += " AND E.SALDO - DBO.SALDO_EMPENHADO_ESTOQUE(PC.IDPRODUTOCLIENTE) >=0 ";
                ssql += " ORDER BY PC.DESCRICAO  ";
            }
            return DAL.BD.cDb.RetornarDataTable(ssql, cnx);
        }

        public DataTable ConsultarProdutoComFoto(string idClienteDivisao, string idCliente, string desc,string cnx)
        {
            string strsql = "SELECT  ";
            strsql += " (SELECT TOP 1 FOTO FROM PRODUTOFOTO PF WHERE PF.IDPRODUTO=PR.IDPRODUTO ) FOTO, ";
            strsql += " ISNULL(PROCLI.CODIGODOCLIENTE, PROCLI.CODIGO) CODIGODOCLIENTE,";
            strsql += " PROCLI.CODIGO,";
            strsql += " LEFT(PROCLI.DESCRICAO,30) DESCRICAO,";
            strsql += " SOLICITARDATADEVALIDADE 'PERECIVEL',";
            strsql += " SOLICITARDATADEVALIDADE 'VALIDADE',";
            strsql += " VALORUNITARIO,";
            strsql += " CAST(COALESCE(ESTDIV.SALDO, 0) - (SELECT COALESCE(SUM(DOCIT.QUANTIDADEUNIDADEESTOQUE),0) AS QUANTIDADEUNIDADEESTOQUE FROM DOCUMENTOITEM DOCIT    ";
            strsql += " 		INNER JOIN DOCUMENTO DOC ON (DOC.IDDOCUMENTO = DOCIT.IDDOCUMENTO)    ";
            strsql += " INNER JOIN PRODUTOEMBALAGEM PRODE 	ON (PRODE.IDPRODUTOEMBALAGEM = DOCIT.IDPRODUTOEMBALAGEM)    ";
            strsql += " WHERE DOC.ENTRADASAIDA = 'SAIDA'    ";
            strsql += " AND DOC.TIPODEDOCUMENTO = 'PEDIDO'   ";
            strsql += " AND DOC.ATIVO = 'SIM'    ";
            strsql += " AND PRODE.IDPRODUTOCLIENTE = PROCLI.IDPRODUTOCLIENTE    ";
            strsql += " AND COALESCE(DOCIT.ESTOQUEPROCESSADO,'NAO') = 'NAO'     ";
            strsql += " AND DOCIT.IDCLIENTEDIVISAO = ESTDIV.IDCLIENTEDIVISAO   ) AS NUMERIC (10,0)) AS SALDODIVISAODISPONIVEL,";
            strsql += " CONTEUDO,								";
            strsql += " UNIDADEDEMEDIDA,";
            strsql += " isnull(PR.ALTURA, 0) ALTURA,";
            strsql += " isnull(PR.LARGURA, 0) LARGURA,";
            strsql += " isnull(PR.COMPRIMENTO, 0) COMPRIMENTO,";
            strsql += " isnull(PR.PESOBRUTO, 0) PESOBRUTO,";
            strsql += " isnull(PR.PESOLIQUIDO, 0) PESOLIQUIDO,";
            strsql += " '0.00' RODOVIARIO,";
            strsql += " '0.00' AERIO,";
            strsql += " DATALIMITEDEUSO";

            strsql += " FROM ESTOQUEDIVISAO ESTDIV    ";
            strsql += " LEFT JOIN ESTOQUE EST   ON(EST.IDESTOQUE = ESTDIV.IDESTOQUE)   ";
            strsql += " LEFT JOIN PRODUTOCLIENTE PROCLI   ON(PROCLI.IDPRODUTOCLIENTE = EST.IDPRODUTOCLIENTE)   ";
            strsql += " LEFT JOIN PRODUTOEMBALAGEM PROEMB   ON (PROEMB.IDPRODUTOCLIENTE = PROCLI.IDPRODUTOCLIENTE)   ";
            strsql += " LEFT JOIN UNIDADEDEMEDIDA UNIDEMED   ON (UNIDEMED.IDUNIDADEDEMEDIDA = PROCLI.IDUNIDADEDEMEDIDA)";
            strsql += " INNER JOIN PRODUTO PR ON PR.IDPRODUTO =   PROEMB.IDPRODUTO ";
            strsql += " WHERE ESTDIV.IDCLIENTEDIVISAO=" + idClienteDivisao;
            strsql += " AND PROCLI.IDCLIENTE = " + idCliente;
            strsql += " AND COALESCE(ESTDIV.SALDO, 0) - (SELECT COALESCE(SUM(DOCIT.QUANTIDADEUNIDADEESTOQUE),0) AS QUANTIDADEUNIDADEESTOQUE ";
            strsql += " FROM DOCUMENTOITEM DOCIT";
            strsql += " INNER JOIN DOCUMENTO DOC";
            strsql += " ON (DOC.IDDOCUMENTO = DOCIT.IDDOCUMENTO)";
            strsql += " INNER JOIN PRODUTOEMBALAGEM PRODE";
            strsql += " ON (PRODE.IDPRODUTOEMBALAGEM = DOCIT.IDPRODUTOEMBALAGEM)";
            strsql += " WHERE DOC.ENTRADASAIDA = 'SAIDA'";
            strsql += " AND DOC.TIPODEDOCUMENTO = 'PEDIDO'";
            strsql += " AND DOC.ATIVO = 'SIM'";
            strsql += " AND PRODE.IDPRODUTOCLIENTE = PROCLI.IDPRODUTOCLIENTE";
            strsql += " AND COALESCE(DOCIT.ESTOQUEPROCESSADO,'NAO') = 'NAO' ";
            strsql += " AND DOCIT.IDCLIENTEDIVISAO = ESTDIV.IDCLIENTEDIVISAO	) >=0";
            strsql += " AND (PROCLI.DESCRICAO LIKE '%" + desc + "%' or PROCLI.CODIGO like '%"+desc+"%')";
            return DAL.BD.cDb.RetornarDataTable(strsql, cnx);

        }

        public DataTable RetonarRelatorioEstoque(int idCliente, string pesq, string cnx)
        {
            string strsql = " ";
            strsql += " SELECT top 100 PC.IDPRODUTOCLIENTE,PC.CODIGO, PC.CODIGODOCLIENTE,PC.DESCRICAO, convert(INT, E.SALDO  - DBO.SALDO_EMPENHADO_ESTOQUE(PC.IDPRODUTOCLIENTE)) ESTOQUE ,ED.SALDO  - DBO.SALDO_EMPENHADO(PC.IDPRODUTOCLIENTE, ED.IDCLIENTEDIVISAO) ESTOQUEDIVISAO,CD.NOME,P.CODIGODEBARRAS,P.ALTURA,P.LARGURA,P.COMPRIMENTO,P.PESOBRUTO,P.PESOLIQUIDO,PE.VALORUNITARIO FROM PRODUTOCLIENTE PC INNER JOIN ESTOQUE E ON E.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE ";
            strsql += " INNER JOIN ESTOQUEDIVISAO ED ON ED.IDESTOQUE = E.IDESTOQUE ";
            strsql += " INNER JOIN CLIENTEDIVISAO CD ON CD.IDCLIENTEDIVISAO = ED.IDCLIENTEDIVISAO ";
            strsql += " INNER JOIN PRODUTOEMBALAGEM PE  ON PE.IDPRODUTOCLIENTE = PC.IDPRODUTOCLIENTE ";
            strsql += " INNER JOIN PRODUTO P ON P.IDPRODUTO = PE.IDPRODUTO ";
            strsql += " WHERE PC.IDCLIENTE = " + idCliente;
            strsql += " AND PC.ATIVO = 'SIM' ";

            if (pesq != "")
            {
                strsql += " and (PC.CODIGO LIKE '" + pesq + "%' ";
                strsql += " OR PC.DESCRICAO LIKE '" + pesq + "%' ";
                strsql += " /*OR CD.NOME LIKE '%" + pesq + "%'*/ )";
            }
            strsql += " ORDER BY PC.DESCRICAO";
            return DAL.BD.cDb.RetornarDataTable(strsql, cnx);

        }
    }
}