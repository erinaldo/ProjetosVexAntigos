using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Globalization;
using System.Threading;
using SistranMODEL;
using System.IO;
using System.Data;
using System.Net;
using System.Xml.Serialization;
using System.Xml;
using System.Configuration;
using System.Web.UI.HtmlControls;

public partial class Site : System.Web.UI.MasterPage
{
    #region Events
    
    protected void Page_Load(object sender, EventArgs e)
    {
        try
        {
            if (Session["USUARIO"] == null)
            {
                Response.Write("<script>window.setTimeout(\"window.close()\", 1); self.close();</script>");

            }

            Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture("pt-BR");
            Thread.CurrentThread.CurrentUICulture = new CultureInfo("pt-BR");
            tr0.Height = "600";

            if (!IsPostBack)
            {
                if (Session["USUARIO"] == null)
                {
                    Session.Abandon();
                    Session.Clear();
                    Response.Redirect("frmLoginGrupoLogos.aspx");
                }

                KKKKKK2.Attributes.Add("onclick", "javascript:Ocultar('" + tr0.ClientID + "', '" + KKKKKK2.ClientID + "','s')");
                KKKKKK2.Attributes.Add("onmouseover", "javascript: this.style.cursor = 'hand'");

                CultureInfo culture = new CultureInfo("pt-BR");
                DateTimeFormatInfo dtfi = culture.DateTimeFormat;
                int dia = DateTime.Now.Day;
                int ano = DateTime.Now.Year;
                string mes = culture.TextInfo.ToTitleCase(dtfi.GetMonthName(DateTime.Now.Month));
                string diasemana = culture.TextInfo.ToTitleCase(dtfi.GetDayName(DateTime.Now.DayOfWeek));
                string data = diasemana + ", " + dia + " de " + mes + " de " + ano;
                lblDataHora.Text = data;


                if (Session["ProfileIndex"] != null && !string.IsNullOrEmpty(Session["ProfileIndex"].ToString()) && Convert.ToInt32(Session["ProfileIndex"].ToString()) >= 0)
                {
                    List<SistranMODEL.Usuario>  LUser = (Session["USUARIO"] as List<SistranMODEL.Usuario>);
                    SistranMODEL.Usuario Usuario = new SistranMODEL.Usuario();
                    Usuario = LUser[Convert.ToInt32(Session["ProfileIndex"])];
                    lblUserName.Text = "Usuário: " + Usuario.UsuarioNome;
                    this.Page.Title = Usuario.UsuarioNome;
                    CarregraMenu2();                

                    this.Page.Title = "Intranet";
                }
                else
                {
                    Response.Write("<script>window.setTimeout(\"window.close()\", 1); self.close();</script>");
                    Response.End();

                }
            }
        }
        catch (Exception ex)
        {
            Response.Write("<script>alert('" + ex.Message.Replace("'", "´´") + "')</script>");

        }
    }

    private void CarregraMenu2()
    {       
        TreeNode n = new TreeNode();
        List<SistranMODEL.Usuario>  LUser = (Session["USUARIO"] as List<SistranMODEL.Usuario>);
        DataTable dtMenu = SistranBLL.Menu.MontarMenu(LUser[0].UsuarioId);

        DataRow[] m = dtMenu.Select("PROGRAMA='HOME'");

        if (m.Length > 0)
        {
            n = new TreeNode("Home", "Home");
            n.NavigateUrl = m[0]["link"].ToString() + "?opc=" + "Home";
            Session["pgInicial"] = m[0]["link"].ToString() + "?opc=Home";
            TreeViewMenu.Nodes.Add(n);
        }
        else
        {
            Session["pgInicial"] ="Vazio.aspx?opc=" + "Home";
        }

        foreach (DataRow item in dtMenu.Rows)
        {
            if (item["Link"].ToString() != "")
            {
                bool jaExiste = false;
                for (int i = 0; i < TreeViewMenu.Nodes.Count; i++)
                {
                    if (item["Menu"].ToString() == TreeViewMenu.Nodes[i].Text)
                    {
                        jaExiste = true;
                    }
                }

                if (jaExiste == false)
                {
                    n = new TreeNode(item["Menu"].ToString(), item["Menu"].ToString());
                    n.NavigateUrl = item["Link"].ToString() + "?opc=" + item["Menu"].ToString();
                    TreeViewMenu.Nodes.Add(n);
                }
            }
        }

        if (Session["ConnLogin"].ToString().ToLower().Contains("dicate") || Session["ConnLogin"].ToString().ToLower().Contains("sistranweb"))
        {
            n = new TreeNode("Manual");
            n.NavigateUrl = "help/Manual.pdf";
            n.Target = "_blank";
            TreeViewMenu.Nodes.Add(n);
        }

        Session["TreeViewMenu"] = TreeViewMenu;
    }  
    
    protected void ddlCliente_SelectedIndexChanged(object sender, EventArgs e)
    {

        List<SistranMODEL.Usuario>  LUser = (Session["USUARIO"] as List<SistranMODEL.Usuario>);

        foreach (var item in LUser)
        {
            if (item.EmpresaId.ToString() == lblCodEmpresa.Text)
            {               
                Session["IDEmpresa"] = lblCodEmpresa.Text;
                Response.Redirect("default.aspx");
            }
        }
    }
        
    #endregion

    #region Methods
    private static List<SistranMODEL.Usuario> LUser;

    protected void ddlClientes_SelectedIndexChanged(object sender, EventArgs e)
    {        
        List<SistranMODEL.Usuario> LUser = (Session["USUARIO"] as List<SistranMODEL.Usuario>);

        SistranMODEL.Usuario Usuario = new SistranMODEL.Usuario();
        Usuario = LUser[Convert.ToInt32(Session["ProfileIndex"])];
        lblUserName.Text = Usuario.UsuarioNome;
    }

    private void CarregaMenu()
    {

        SistranMODEL.Usuario Usuario = new SistranMODEL.Usuario();
        Usuario = LUser[Convert.ToInt32(Session["ProfileIndex"])];

        List<SistranMODEL.Menu> menuPai = new List<SistranMODEL.Menu>();
        menuPai = SistranBLL.Menu.GetMenuParent(Usuario.UsuarioId, Session["Conn"].ToString());
        //nodes pais
        foreach (var item in menuPai)
        {
            TreeNode newNode = new TreeNode(item.Titulo.ToString(), item.Id.ToString());
            if (item.Titulo == "Home")
            {
                newNode.NavigateUrl = "Inicial.aspx";
            }
            TreeViewMenu.Nodes.Add(newNode);

            //adiciona os nos filhos
            AddChildNodes(newNode, item.Id);

            if (newNode.ChildNodes.Count == 0 && item.Titulo !="Home")
            {
                TreeViewMenu.Nodes.Remove(newNode);
            }
        }
    }

    private void AddChildNodes(TreeNode parentNode, int parentId)
    {
        SistranMODEL.Usuario Usuario = new SistranMODEL.Usuario();
        Usuario = LUser[Convert.ToInt32(Session["ProfileIndex"])];

        List<SistranMODEL.menuChildren> menuChildren = new List<SistranMODEL.menuChildren>();
        menuChildren = SistranBLL.menuChildren.GetMenuChildren(Usuario.UsuarioId, parentId, Session["Conn"].ToString());

        foreach (var childNodeId in menuChildren)
        {
            TreeNode childNode = new TreeNode(childNodeId.Titulo.ToString(), childNodeId.Id.ToString());
            childNode.NavigateUrl = childNodeId.Link +"?opc="+ Server.UrlEncode(childNodeId.Titulo.ToString());
            //add to parent        

            if (childNodeId.Link != "" || menuChildren.Count > 0)
                parentNode.ChildNodes.Add(childNode);

            //call same function recursively
            if (menuChildren.Count > 0)
            {
                if (childNodeId.Link != "" || menuChildren.Count > 0)
                    AddChildNodes(childNode, childNodeId.Id);
            }
        }
    }
    #endregion


    protected void lnkLogout_Click(object sender, EventArgs e)
    {
        Response.Redirect("erro.aspx");
    }

    protected void lnkLogout_Click1(object sender, EventArgs e)
    {
        Response.Redirect("Fim.aspx");
    }

    protected void ImageButton1_Click(object sender, ImageClickEventArgs e)
    {
        dvEscolheCliente.Visible = false;
        dvEscolheCliente.Visible = true;
        txtFiltro.Text = "";
        CheckBoxList1.Visible = false;
        rdListClientes.Items.Clear();
        btnConfirmar.Visible = false;
        pnlClientes.Visible = false;
    }
        
    protected void Button2_Click(object sender, EventArgs e)
    {
        
        CheckBoxList1.Visible = false;
        rdListClientes.Items.Clear();
        btnConfirmar.Visible = false;


        if (txtFiltro.Text.Trim() == "")
        {        
            return;
        }
        DataTable dtRet = new SistranBLL.Cliente().RetornarClientasIntranet(txtFiltro.Text);
        for (int i = 0; i < dtRet.Rows.Count; i++)
        {
            string nome = dtRet.Rows[i]["CNPJCPF"].ToString() + " - " + dtRet.Rows[i]["RAZAOSOCIALNOME"].ToString().ToUpper();
            
            if (nome.Length > 40)
                nome = nome.Substring(0, 40) + "...";


            rdListClientes.Items.Insert(i, new ListItem(nome, dtRet.Rows[i]["CODIGODOCLIENTE"].ToString()));
            pnlClientes.Visible = true;
        }
    }
   
    protected void rdListClientes_SelectedIndexChanged(object sender, EventArgs e)
    {
        for (int i = 0; i < rdListClientes.Items.Count; i++)
        {
            if (rdListClientes.Items[i].Selected == true)
            {                
                carregarListClientesRelacionados(rdListClientes.SelectedValue);
            }
            CheckBoxList1.Visible = true;
        }
    }

    private void carregarListClientesRelacionados(string p)
    {
        //CheckBoxList1.Visible = true;
        DataTable dtRet = new SistranBLL.Cliente().RetornarClientasRelacionados(p);

        CheckBoxList1.Items.Clear();
        for (int i = 0; i < dtRet.Rows.Count; i++)
        {
            string nome = dtRet.Rows[i]["CNPJCPF"].ToString() + " - " + dtRet.Rows[i]["RAZAOSOCIALNOME"].ToString().ToUpper();
            if (nome.Length > 40)
                nome = nome.Substring(0, 40) + "...";

            CheckBoxList1.Items.Insert(i, new ListItem(nome, dtRet.Rows[i]["CODIGODOCLIENTE"].ToString()));
            CheckBoxList1.Items[i].Selected = true;
            btnConfirmar.Visible = true;
        }
    }

    protected void btnConfirmar_Click(object sender, EventArgs e)
    {        
        ListBox ListClientes = new ListBox();
        ListClientes.Items.Clear();
        
        for (int i = 0; i < CheckBoxList1.Items.Count; i++)
        {
            ListClientes.Items.Insert(i, CheckBoxList1.Items[i].Value);     
        }
        Session["ListClientes"] = ListClientes;

        Response.Redirect("ResumoPorFilial.aspx?opc=RESUMO POR FILIAL - INTRANET");
    }
}
