using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
//using Microsoft.Reporting.WebForms;
using System.Configuration;
using System.Threading;
using System.Globalization;

public partial class Det04 : System.Web.UI.Page
{
    string select = "";
 
    protected void Page_Load(object sender, EventArgs e)
    {
        try
        {
            Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture("pt-BR");
            Thread.CurrentThread.CurrentUICulture = new CultureInfo("pt-BR");
            CultureInfo culture = new CultureInfo("pt-BR");


            if (!IsPostBack)
            {
                decimal m = new SistranBLL.KPI().Form04("Todos", Request["ini"], Request["fim"] + " 23:59:59", ref select);
                lblResultado.Text = m.ToString("#0.00") +"%";
                gerarReport();                
            }
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(Master.FindControl("Up"), this.GetType(), "Alert", "alert('" + ex.Message.Replace("'", "´") + "')", true);
        }

    }

    private void gerarReport()
    {
        DataSet dts = retornar();     
        lblConferidas.Text = dts.Tables[2].Rows[0][0].ToString();

        decimal LinhasAtendidas = new SistranBLL.KPI().Form02("Todos", Request["ini"], Request["fim"] + " 23:59:59", ref select);

        lblAtendidas.Text = LinhasAtendidas.ToString();

        lblAtendidas.Attributes.Add("OnClick", "javascript:window.open('gerarExcel.aspx?key=det04a')");
        lblAtendidas.Style.Add("HtmlTextWriterStyle.Cursor", "Hand");
        lblAtendidas.ToolTip = "Clique para gerar o Excel";
        Session["det04a"] = dts.Tables[0];
                

        ReportViewer rw = new Microsoft.Reporting.WebForms.ReportViewer();
        rw.Width = new Unit("100%");
        rw.Height = 600;
        rw.BackColor = System.Drawing.Color.WhiteSmoke;
        rw.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
        rw.BorderWidth = 0;
        rw.LocalReport.DataSources.Clear();
        rw.LocalReport.EnableHyperlinks = true;
        ReportDataSource datasource = new ReportDataSource("dsKpi02_DT_ATENDIDOS", dts.Tables[0]);
        rw.LocalReport.DataSources.Add(datasource);
        rw.LocalReport.ReportPath = @"kpi\reports\kpi02Atendidas.rdlc";
        rw.LocalReport.EnableExternalImages = true;
        rw.LocalReport.Refresh();
        pnlLinhasAtendidas.Controls.Add(rw);
        pnlLinhasAtendidas.ScrollBars = ScrollBars.None; 



        lblConferidas.Attributes.Add("OnClick", "javascript:window.open('gerarExcel.aspx?key=det04c')");
        lblConferidas.Style.Add("HtmlTextWriterStyle.Cursor", "Hand");
        lblConferidas.ToolTip = "Clique para gerar o Excel";
        Session["det04c"] = dts.Tables[1];

        ReportViewer rw2 = new Microsoft.Reporting.WebForms.ReportViewer();
        rw2.Width = new Unit("100%");
        rw2.Height = 600;
        rw2.BackColor = System.Drawing.Color.WhiteSmoke;
        rw2.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
        rw2.BorderWidth = 0;
        rw2.LocalReport.DataSources.Clear();
        rw2.LocalReport.EnableHyperlinks = true;
        ReportDataSource datasource2 = new ReportDataSource("dsKpi02_DT_CONFERIDAS", dts.Tables[1]);
        rw2.LocalReport.DataSources.Add(datasource2);
        rw2.LocalReport.ReportPath = @"kpi\reports\kpi04Conferidas.rdlc";
        rw2.LocalReport.EnableExternalImages = true;
        rw2.LocalReport.Refresh();
        pnlLinhasConferidas.Controls.Add(rw2);
        pnlLinhasConferidas.ScrollBars = ScrollBars.None; 
    }

    public DataSet retornar()
    {
        //atendidos
        string strsql = " SELECT NF.NUMERO PEDIDO,  NF.SERIE,   PC.CODIGO,  PC.DESCRICAO, GP.DESCRICAO GRUPO,  NFI.QUANTIDADE ";
        strsql += " FROM  ";
        strsql += " DOCUMENTO NF   ";
        strsql += " INNER JOIN DOCUMENTOITEM NFI ON (NFI.IDDOCUMENTO = NF.IDDOCUMENTO)   ";
        strsql += " INNER JOIN PRODUTOEMBALAGEM PE ON (PE.IDPRODUTOEMBALAGEM = NFI.IDPRODUTOEMBALAGEM)   ";
        strsql += " INNER JOIN PRODUTOCLIENTE PC ON (PC.IDPRODUTOCLIENTE = PE.IDPRODUTOCLIENTE)   ";
        strsql += " INNER JOIN GRUPODEPRODUTO GP ON (GP.IDGRUPODEPRODUTO = PC.IDGRUPODEPRODUTO) WHERE  NF.IDCLIENTE IN (" + Sistran.Library.FuncoesUteis.retornarClientes() + ")     ";
        strsql += " AND NF.TIPODEDOCUMENTO = 'NOTA FISCAL'  AND NF.ATIVO = 'SIM'  AND NF.ENTRADASAIDA = 'SAIDA'   ";
        strsql += " AND NF.DATADEEMISSAO BETWEEN CONVERT(DATETIME, '" + Request["ini"] + "', 103)  AND  CONVERT(DATETIME, '" + Request["fim"] + " 23:59:59', 103)   ";
        strsql += " ORDER BY NF.NUMERO   ";

        



        //conferidos
        strsql += " SELECT NF.NUMERO PEDIDO,  NF.SERIE,   PC.CODIGO,  PC.DESCRICAO, GP.DESCRICAO GRUPO,  NFI.QUANTIDADE    ";
        strsql += " FROM MAPA MP INNER JOIN MOVIMENTACAOITEM MI ON (MI.IDMAPA = MP.IDMAPA)  ";
        strsql += " INNER JOIN DOCUMENTO NF ON (NF.IDDOCUMENTO = MI.IDDOCUMENTO)  ";
        strsql += " INNER JOIN DOCUMENTOITEM NFI ON (NFI.IDDOCUMENTO = NF.IDDOCUMENTO)  ";
        strsql += " INNER JOIN PRODUTOEMBALAGEM PE ON (PE.IDPRODUTOEMBALAGEM = NFI.IDPRODUTOEMBALAGEM) ";
        strsql += " INNER JOIN PRODUTOCLIENTE PC ON (PC.IDPRODUTOCLIENTE = PE.IDPRODUTOCLIENTE) INNER JOIN GRUPODEPRODUTO GP ON (GP.IDGRUPODEPRODUTO = PC.IDGRUPODEPRODUTO)";
        strsql += " WHERE NF.IDCLIENTE in(" + Sistran.Library.FuncoesUteis.retornarClientes() + ") AND MP.ESTOQUEPROCESSADO = 'SIM' ";
        strsql += " AND MP.ESTOQUEPROCESSADO = 'SIM'  ";
        strsql += " and nf.ENTRADASAIDA='saida' and nf.tipodedocumento='pedido' ";

        strsql += " AND MP.DATADECADASTRO BETWEEN CONVERT(DATETIME, '" + Request["ini"] + "', 103)  AND  CONVERT(DATETIME, '" + Request["fim"] + " 23:59:59', 103)   ";
        strsql += " AND MI.PEDIDONOTAFISCAL IS NOT NULL ";

        //contarConferidos
        strsql += " SELECT CAST( COUNT(DISTINCT NFI.IDDOCUMENTOITEM)   AS DECIMAL) LINHASCONFERIDAS   ";
        strsql += " FROM MAPA MP INNER JOIN MOVIMENTACAOITEM MI ON (MI.IDMAPA = MP.IDMAPA)  ";
        strsql += " INNER JOIN DOCUMENTO NF ON (NF.IDDOCUMENTO = MI.IDDOCUMENTO)  ";
        strsql += " INNER JOIN DOCUMENTOITEM NFI ON (NFI.IDDOCUMENTO = NF.IDDOCUMENTO)  ";
        strsql += " WHERE NF.IDCLIENTE IN (" + Sistran.Library.FuncoesUteis.retornarClientes() + ") AND MP.ESTOQUEPROCESSADO = 'SIM'   ";
        strsql += " AND NF.ENTRADASAIDA='SAIDA' AND NF.TIPODEDOCUMENTO='PEDIDO'AND MP.DATADECADASTRO  ";
        strsql += " BETWEEN CONVERT(DATETIME, '" + Request["ini"] + "', 103)  AND  CONVERT(DATETIME, '" + Request["fim"] + " 23:59:59', 103)   ";
        


        return Sistran.Library.GetDataTables.RetornarDataSet(strsql, "");
    }

      
}