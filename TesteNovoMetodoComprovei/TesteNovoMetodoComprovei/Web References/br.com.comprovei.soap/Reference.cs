//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RoboEnvioComproveiProtocolo.br.com.comprovei.soap {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceComproveiBinding", Namespace="urn:WebServiceComprovei")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Notification))]
    public partial class WebServiceComprovei : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback uploadDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadRouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadNFeOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadCTeOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadMDFeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImportProtocolStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceComprovei() {
            this.Url = global::RoboEnvioComproveiProtocolo.Properties.Settings.Default.TesteNovoMetodoComprovei_br_com_comprovei_soap_WebServiceComprovei;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event uploadDocumentsCompletedEventHandler uploadDocumentsCompleted;
        
        /// <remarks/>
        public event uploadRouteCompletedEventHandler uploadRouteCompleted;
        
        /// <remarks/>
        public event uploadUsersCompletedEventHandler uploadUsersCompleted;
        
        /// <remarks/>
        public event uploadNFeCompletedEventHandler uploadNFeCompleted;
        
        /// <remarks/>
        public event uploadCTeCompletedEventHandler uploadCTeCompleted;
        
        /// <remarks/>
        public event uploadMDFeCompletedEventHandler uploadMDFeCompleted;
        
        /// <remarks/>
        public event getImportProtocolStatusCompletedEventHandler getImportProtocolStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServiceComprovei#uploadDocuments", RequestNamespace="urn:WebServiceComprovei", ResponseNamespace="urn:WebServiceComprovei")]
        [return: System.Xml.Serialization.SoapElementAttribute("Code", DataType="integer")]
        public string uploadDocuments(string conteudoArquivo, out string Status, out string protocolo, out Notifications Notifications) {
            object[] results = this.Invoke("uploadDocuments", new object[] {
                        conteudoArquivo});
            Status = ((string)(results[1]));
            protocolo = ((string)(results[2]));
            Notifications = ((Notifications)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadDocumentsAsync(string conteudoArquivo) {
            this.uploadDocumentsAsync(conteudoArquivo, null);
        }
        
        /// <remarks/>
        public void uploadDocumentsAsync(string conteudoArquivo, object userState) {
            if ((this.uploadDocumentsOperationCompleted == null)) {
                this.uploadDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadDocumentsOperationCompleted);
            }
            this.InvokeAsync("uploadDocuments", new object[] {
                        conteudoArquivo}, this.uploadDocumentsOperationCompleted, userState);
        }
        
        private void OnuploadDocumentsOperationCompleted(object arg) {
            if ((this.uploadDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadDocumentsCompleted(this, new uploadDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServiceComprovei#uploadRoute", RequestNamespace="urn:WebServiceComprovei", ResponseNamespace="urn:WebServiceComprovei")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string uploadRoute(string conteudoArquivo, string nomeArquivo, out string protocolo) {
            object[] results = this.Invoke("uploadRoute", new object[] {
                        conteudoArquivo,
                        nomeArquivo});
            protocolo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadRouteAsync(string conteudoArquivo, string nomeArquivo) {
            this.uploadRouteAsync(conteudoArquivo, nomeArquivo, null);
        }
        
        /// <remarks/>
        public void uploadRouteAsync(string conteudoArquivo, string nomeArquivo, object userState) {
            if ((this.uploadRouteOperationCompleted == null)) {
                this.uploadRouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadRouteOperationCompleted);
            }
            this.InvokeAsync("uploadRoute", new object[] {
                        conteudoArquivo,
                        nomeArquivo}, this.uploadRouteOperationCompleted, userState);
        }
        
        private void OnuploadRouteOperationCompleted(object arg) {
            if ((this.uploadRouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadRouteCompleted(this, new uploadRouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServiceComprovei#uploadUsers", RequestNamespace="urn:WebServiceComprovei", ResponseNamespace="urn:WebServiceComprovei")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string uploadUsers(string conteudoArquivo, string nomeArquivo, out string protocolo) {
            object[] results = this.Invoke("uploadUsers", new object[] {
                        conteudoArquivo,
                        nomeArquivo});
            protocolo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadUsersAsync(string conteudoArquivo, string nomeArquivo) {
            this.uploadUsersAsync(conteudoArquivo, nomeArquivo, null);
        }
        
        /// <remarks/>
        public void uploadUsersAsync(string conteudoArquivo, string nomeArquivo, object userState) {
            if ((this.uploadUsersOperationCompleted == null)) {
                this.uploadUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadUsersOperationCompleted);
            }
            this.InvokeAsync("uploadUsers", new object[] {
                        conteudoArquivo,
                        nomeArquivo}, this.uploadUsersOperationCompleted, userState);
        }
        
        private void OnuploadUsersOperationCompleted(object arg) {
            if ((this.uploadUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadUsersCompleted(this, new uploadUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServiceComprovei#uploadNFe", RequestNamespace="urn:WebServiceComprovei", ResponseNamespace="urn:WebServiceComprovei")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string uploadNFe(string conteudoArquivo, string nomeArquivo, out string protocolo) {
            object[] results = this.Invoke("uploadNFe", new object[] {
                        conteudoArquivo,
                        nomeArquivo});
            protocolo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadNFeAsync(string conteudoArquivo, string nomeArquivo) {
            this.uploadNFeAsync(conteudoArquivo, nomeArquivo, null);
        }
        
        /// <remarks/>
        public void uploadNFeAsync(string conteudoArquivo, string nomeArquivo, object userState) {
            if ((this.uploadNFeOperationCompleted == null)) {
                this.uploadNFeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadNFeOperationCompleted);
            }
            this.InvokeAsync("uploadNFe", new object[] {
                        conteudoArquivo,
                        nomeArquivo}, this.uploadNFeOperationCompleted, userState);
        }
        
        private void OnuploadNFeOperationCompleted(object arg) {
            if ((this.uploadNFeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadNFeCompleted(this, new uploadNFeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServiceComprovei#uploadCTe", RequestNamespace="urn:WebServiceComprovei", ResponseNamespace="urn:WebServiceComprovei")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string uploadCTe(string conteudoArquivo, string nomeArquivo, out string protocolo) {
            object[] results = this.Invoke("uploadCTe", new object[] {
                        conteudoArquivo,
                        nomeArquivo});
            protocolo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadCTeAsync(string conteudoArquivo, string nomeArquivo) {
            this.uploadCTeAsync(conteudoArquivo, nomeArquivo, null);
        }
        
        /// <remarks/>
        public void uploadCTeAsync(string conteudoArquivo, string nomeArquivo, object userState) {
            if ((this.uploadCTeOperationCompleted == null)) {
                this.uploadCTeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadCTeOperationCompleted);
            }
            this.InvokeAsync("uploadCTe", new object[] {
                        conteudoArquivo,
                        nomeArquivo}, this.uploadCTeOperationCompleted, userState);
        }
        
        private void OnuploadCTeOperationCompleted(object arg) {
            if ((this.uploadCTeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadCTeCompleted(this, new uploadCTeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServiceComprovei#uploadMDFe", RequestNamespace="urn:WebServiceComprovei", ResponseNamespace="urn:WebServiceComprovei")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string uploadMDFe(string conteudoArquivo, string nomeArquivo, out string protocolo) {
            object[] results = this.Invoke("uploadMDFe", new object[] {
                        conteudoArquivo,
                        nomeArquivo});
            protocolo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void uploadMDFeAsync(string conteudoArquivo, string nomeArquivo) {
            this.uploadMDFeAsync(conteudoArquivo, nomeArquivo, null);
        }
        
        /// <remarks/>
        public void uploadMDFeAsync(string conteudoArquivo, string nomeArquivo, object userState) {
            if ((this.uploadMDFeOperationCompleted == null)) {
                this.uploadMDFeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadMDFeOperationCompleted);
            }
            this.InvokeAsync("uploadMDFe", new object[] {
                        conteudoArquivo,
                        nomeArquivo}, this.uploadMDFeOperationCompleted, userState);
        }
        
        private void OnuploadMDFeOperationCompleted(object arg) {
            if ((this.uploadMDFeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadMDFeCompleted(this, new uploadMDFeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServiceComprovei#getImportProtocolStatus", RequestNamespace="urn:WebServiceComprovei", ResponseNamespace="urn:WebServiceComprovei")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public string getImportProtocolStatus(ref string protocolo, out string metodo, out string dataCriacao, out string dataConclusao, out string processado, out string resultado) {
            object[] results = this.Invoke("getImportProtocolStatus", new object[] {
                        protocolo});
            protocolo = ((string)(results[1]));
            metodo = ((string)(results[2]));
            dataCriacao = ((string)(results[3]));
            dataConclusao = ((string)(results[4]));
            processado = ((string)(results[5]));
            resultado = ((string)(results[6]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getImportProtocolStatusAsync(string protocolo) {
            this.getImportProtocolStatusAsync(protocolo, null);
        }
        
        /// <remarks/>
        public void getImportProtocolStatusAsync(string protocolo, object userState) {
            if ((this.getImportProtocolStatusOperationCompleted == null)) {
                this.getImportProtocolStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImportProtocolStatusOperationCompleted);
            }
            this.InvokeAsync("getImportProtocolStatus", new object[] {
                        protocolo}, this.getImportProtocolStatusOperationCompleted, userState);
        }
        
        private void OngetImportProtocolStatusOperationCompleted(object arg) {
            if ((this.getImportProtocolStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImportProtocolStatusCompleted(this, new getImportProtocolStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:WebServiceComprovei")]
    public partial class Notifications {
        
        private Notification[] errorField;
        
        private Notification[] warningField;
        
        /// <remarks/>
        public Notification[] Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public Notification[] Warning {
            get {
                return this.warningField;
            }
            set {
                this.warningField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:WebServiceComprovei")]
    public partial class Notification {
        
        private string codeField;
        
        private string docField;
        
        private string mensagemField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Doc {
            get {
                return this.docField;
            }
            set {
                this.docField = value;
            }
        }
        
        /// <remarks/>
        public string Mensagem {
            get {
                return this.mensagemField;
            }
            set {
                this.mensagemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void uploadDocumentsCompletedEventHandler(object sender, uploadDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string protocolo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public Notifications Notifications {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Notifications)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void uploadRouteCompletedEventHandler(object sender, uploadRouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string protocolo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void uploadUsersCompletedEventHandler(object sender, uploadUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string protocolo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void uploadNFeCompletedEventHandler(object sender, uploadNFeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadNFeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadNFeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string protocolo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void uploadCTeCompletedEventHandler(object sender, uploadCTeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadCTeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadCTeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string protocolo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void uploadMDFeCompletedEventHandler(object sender, uploadMDFeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadMDFeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadMDFeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string protocolo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getImportProtocolStatusCompletedEventHandler(object sender, getImportProtocolStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImportProtocolStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImportProtocolStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string protocolo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string metodo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string dataCriacao {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string dataConclusao {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string processado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string resultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
    }
}

#pragma warning restore 1591